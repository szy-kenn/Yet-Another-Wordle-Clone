@import url("https://meyerweb.com/eric/tools/css/reset/reset.css");

// $background-color: #251B37; 
// $square-border-color: #FFECEF;
// $filled-color: #FFCACA;

// $correct: #15FFA8;
// $misplaced: #FF9213;
// $wrong: #3b3536;

$background-color: #1C191A; 
$square-border-color: #FFDDE7;
$filled-color: #E9A1B9;

$correct: #5993eb;
$misplaced: #dd9384;
$wrong: #423b3d;

body {
    background-color: $background-color;
    font-family: 'Lilita One';
}

.wrapper {
    position: relative;
    height: 100dvh;
    width: 100%;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: minmax(0, 1fr) minmax(0, 6.25fr) minmax(0, 2.75fr); // navbar grid keypad
    box-sizing: border-box;
    padding: 0 0 min(1%, 2rem) 0;
}

.navbar {
    position: relative;
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 2px solid rgba(white, 0.3);
    padding: 0 1rem;
    box-sizing: border-box;

    .title {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-grow: 1;

        p {
            color: white;
            font-size: clamp(1.25em, 2vw, 2vw);
            
            .wordle {
                color: $correct;
            }
            
            .clone {
                color: $misplaced;
            }
        }
    }

    .icon-group {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: clamp(0.5rem, 1vw, 1vw);
    }

    .icon {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    
        svg {
            fill: white;
            width: clamp(1.15rem, 2vw, 2vw);
        }
    }
    
}

.winner-note {
    position: absolute;
    background-color: white;
    padding: 0.25rem;
    border-radius: 10px;
    top: 5%;
    opacity: 0;
    right: 50%;
    transform: translate(50%, 50%);
    width: max(7.5vw, 12.5vh);
    height: 5vh;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 999;
    transition: all 0.2s ease;
    filter: drop-shadow(0px 5px 2px rgba(0, 0, 0, 0.2));

    p {
        color: $background-color;
        font-weight: normal;
        font-size: clamp(1em, 1.15vw, 1.15vw);
    }

    &.displayed {
        top: min(10%, 10vh);
        opacity: 1;
        transition: all 0.2s ease;
    }

}

.key-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(3, 1fr);
    padding: 0.5rem;
    box-sizing: border-box;
    gap: 0.25rem;

    width: clamp(400px, 32.5%, 32.5%);
    height: 100%;
    max-width: 100%;
    justify-self: center;
}

.key-row {
    display: grid;
    grid-template-rows: 1fr;
    gap: 0.25rem;

    &.keys-1 {
        grid-template-columns: repeat(10, 1fr);

    }

    &.keys-2 {
        grid-template-columns: repeat(9, 1fr);
    }

    &.keys-3 {
        grid-template-columns: repeat(9, 1fr);
    }
}

.key {
    position: relative;
    font-size: clamp(0.8em, 1vw, 1vw);
    font-weight: bold;
    height: 100%;
    width: 100%;
    color: $square-border-color;
    background-color: $wrong;
    border: none;
    border: 2px solid rgba($square-border-color, 0.3);
    border-radius: 5px;
    transform: scale(1);
    transition: transform 0.1s ease;
    z-index: inherit;
    user-select: none;

    &.pressed {
        background-color: $filled-color;
        color: $background-color;
        transform: scale(1.1);
        transition: transform 0.1s ease;
        z-index: 999;
    }

    &.enter, &.delete {
        font-size: clamp(0.7em, 0.9vw, 0.9vw);
    }

}

.wordle-grid-container {

    position: relative;

    width: clamp(400px, 50%, 50%);
    max-width: 100%;
    max-height: 100%;

    padding: 1rem;
    box-sizing: border-box;
    
    align-self: center;
    justify-self: center;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(6, 1fr);
    gap: clamp(0.25rem, 0.35vw, 0.35vw);
}

.row-container {
    position: relative;
    display: flex;
    align-self: center;
    align-items: center;
    justify-content: center;
    gap: clamp(0.25rem, 0.35vw, 0.35vw);

    &.shake {
        animation: 0.1s shake ease;
    }
}

.square {
    position: relative;
    width: max(3rem, 7.5%);
    aspect-ratio: 1;    // to make this a square
    border-radius: 5px;
    border: 3px solid rgba($square-border-color, 0.25);
    display: flex;
    align-items: center;
    justify-content: center;

    &.popped {
        animation: 0.1s pop ease-out;
    }

    &.out {
        animation: 0.1s out ease-out;
    }

    &.flipped {
        animation: 0.5s flip ease;
    }

    &.filled {
        border-color: $filled-color;

        p {
            // text-shadow: 1px 1px 1px rgba($background-color, 0.5);
        }
    }

    &.correct {
        border-color: $correct;
        background-color: $correct;

        p {
            color: $background-color;
        }
    }

    &.misplaced {
        border-color: $misplaced;
        background-color: $misplaced;

        p {
            color: $background-color;
        }
    }

    &.wrong {
        border-color: $wrong;
        background-color: $wrong;
    }

    p {
        color: $filled-color;
        font-size: 1.5em;
        text-transform: uppercase;
        text-align: center;
        // font-weight: bold;
    }
}

@keyframes flip {
    0% {
        transform: scaleY(1);
    }

    50% {
        transform: scaleY(0);
    }

    100% {
        transform: scaleY(1);
    }

}

@keyframes shake {
    0% {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-5%);
    }
    
    50% {
        transform: translateX(0);
    }

    75% {
        transform: translateX(5%);
    }

    100% {
        transform: translateX(0);
    }

}

@keyframes pop {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.15);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes out {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(0.8);
    }

    100% {
        transform: scale(1);
    }
}

@keyframes zoomIn {
    from {
        transform: scale(1);
    }

    to {
        transform: scale(1.2);
    }
}

@keyframes zoomOut {
    from {
        transform: scale(1.2);
    }

    to {
        transform: scale(1);
    }
}